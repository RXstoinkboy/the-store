{"version":3,"sources":["components/Shop/Shop.style.js","images/shoppingCart.png","components/About/Grid.style.js","components/About/Grid.js","components/About/About.js"],"names":["PosedShopWrapper","posed","div","enter","opacity","staggerChildren","exit","ShopWrapper","styled","_templateObject","Wrapper","_templateObject2","PosedContainer","hoverable","init","filter","hover","x","Container","_templateObject3","props","height","color","Title","h1","_templateObject4","Img","img","_templateObject5","Name","h3","_templateObject6","module","exports","__webpack_require__","p","Tile","MockTitle","Text","Boom","Grid","react_default","a","createElement","texts","map","text","idx","titles","Link","to","src","shoppingCart","colors","About","Fragment","Shop_style","About_Grid","Component"],"mappings":"6xFAGA,IAAMA,EAAmBC,IAAMC,IAAI,CAC/BC,MAAM,CACFC,QAAS,EACTC,gBAAiB,IAErBC,KAAM,CACFF,QAAS,KAIJG,EAAcC,YAAOR,EAAPQ,CAAHC,KASXC,EAAUF,IAAON,IAAVS,KAgBdC,EAAiBX,IAAMC,IAAI,CAC7BW,WAAW,EACXC,KAAM,CACFC,OAAQ,iBAEZC,MAAO,CACHD,OAAQ,oBAEZZ,MAAO,CAACc,EAAG,GACXX,KAAM,CAACW,EAAG,OAGDC,EAAYV,YAAOI,EAAPJ,CAAHW,IACR,SAAAC,GAAK,OAAIA,EAAMC,QACX,SAAAD,GAAK,OAAIA,EAAME,QAqBpBC,EAAQf,IAAOgB,GAAVC,KAiBLC,EAAMlB,IAAOmB,IAAVC,KAgBHC,EAAOrB,IAAOsB,GAAVC,0BC1GjBC,EAAAC,QAAiBC,EAAAC,EAAuB,8zGCGjC,IAAMzB,EAAUF,IAAON,IAAVO,KAuBP2B,EAAO5B,IAAON,IAAVS,KAwBJY,EAAQf,YAAO6B,IAAP7B,CAAHW,IAQZiB,GAUOE,EAAO9B,IAAO2B,EAAVV,IAUXW,EAQgB,SAAAhB,GAAK,OAAIA,EAAME,OAS3Bc,GAWGV,EAAMlB,IAAOmB,IAAVC,IAaVQ,GAKOG,EAAO/B,IAAON,IAAV6B,IAYC,SAAAX,GAAK,OAAIA,EAAME,OAE3Bc,6BCpGSI,EAjCF,SAAApB,GACT,OACIqB,EAAAC,EAAAC,cAACjC,EAAD,KACKU,EAAMwB,MAAMC,IAAI,SAACC,EAAMC,GAEhB,MAAI,cAAA3B,EAAM4B,OAAOD,GAELN,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAMC,GAAG,SACLT,EAAAC,EAAAC,cAACP,EAAD,KACIK,EAAAC,EAAAC,cAACpB,EAAD,KAAQH,EAAM4B,OAAOD,IACjBN,EAAAC,EAAAC,cAACjB,EAAD,CACIyB,IAAKC,MAEbX,EAAAC,EAAAC,cAACJ,EAAD,CAAMjB,MAAOF,EAAMiC,OAAON,OAOlCN,EAAAC,EAAAC,cAACP,EAAD,KACIK,EAAAC,EAAAC,cAACpB,EAAD,KAAQH,EAAM4B,OAAOD,IACrBN,EAAAC,EAAAC,cAACL,EAAD,CAAMhB,MAAOF,EAAMiC,OAAON,IAAOD,QCvB/DQ,mLAyBE,OACIb,EAAAC,EAAAC,cAACF,EAAAC,EAAMa,SAAP,KACId,EAAAC,EAAAC,cAACa,EAAA,EAAD,cACAf,EAAAC,EAAAC,cAACc,EAAD,CAAMJ,OAVC,CACX,mBACA,kBACA,kBACA,sBAM0BT,MAxBhB,CACV,2OACA,2LACA,oGACA,yKAoBwCI,OAjB7B,CACX,cACA,cACA,gBAHW,uBAXHU,aAkCLJ","file":"static/js/3.42672bf6.chunk.js","sourcesContent":["import styled from 'styled-components';\r\nimport posed from 'react-pose';\r\n\r\nconst PosedShopWrapper = posed.div({\r\n    enter:{\r\n        opacity: 1,\r\n        staggerChildren: 50\r\n    },\r\n    exit: {\r\n        opacity: 0,\r\n    }\r\n});\r\n\r\nexport const ShopWrapper = styled(PosedShopWrapper)`\r\n    background: linear-gradient(135deg, hsla(222, 50%, 80%, .3), hsla(100, 50%, 80%, .4));\r\n    overflow: hidden;\r\n\r\n    @media all and (max-width: 850px){\r\n        overflow: visible;\r\n    }\r\n`\r\n\r\nexport const Wrapper = styled.div`\r\n    padding-left: 5vw;\r\n    width: 100%;\r\n    height: 90vh;\r\n    display: grid;\r\n    grid-template-columns: repeat(auto-fit, minmax(400px, 1fr));\r\n\r\n    @media all and (min-width: 1200px){\r\n        grid-template-columns: 1fr 1fr;\r\n    }\r\n\r\n    @media all and (max-width: 450px){\r\n        grid-template-columns: 1fr;\r\n    }\r\n`\r\n\r\nconst PosedContainer = posed.div({\r\n    hoverable: true,\r\n    init: {\r\n        filter: 'brightness(1)'\r\n    },\r\n    hover: {\r\n        filter: 'brightness(1.15)'\r\n    },\r\n    enter: {x: 0},\r\n    exit: {x: 200}\r\n})\r\n\r\nexport const Container = styled(PosedContainer)`\r\n    height: ${props => props.height};\r\n    background: ${props => props.color};\r\n    box-shadow: inset 0 0 70px hsla(0deg, 0%, 50%, .3);\r\n    display: grid;\r\n    grid-template-rows: 4fr 1fr;\r\n    align-items: center;\r\n    justify-items: center;\r\n    cursor: pointer;\r\n\r\n    @media all and (max-width: 850px){\r\n        height: 30vh;\r\n        grid-template-rows: 1fr;\r\n        grid-template-columns: 1fr 1fr;\r\n    }\r\n\r\n    @media all and (max-width: 500px){\r\n        height: 30vh;\r\n        grid-template-rows: 4fr 1fr;\r\n        grid-template-columns: 1fr;\r\n    }\r\n`\r\n\r\nexport const Title = styled.h1`\r\n    color: white;\r\n    text-shadow: 0 0 20px hsla(0, 0%, 60%, 1);\r\n    padding: 0 0 0 5vw;\r\n    height: 10vh;\r\n    font-size: 8vh;\r\n    text-align: center;\r\n    text-transform: capitalize;\r\n    margin: 0;\r\n    z-index: 10;\r\n    font-family: 'Kaushan Script', cursive;\r\n    \r\n    @media all and (max-width: 450px){\r\n        font-size: 6vh;\r\n    }\r\n`\r\n\r\nexport const Img = styled.img`\r\n    grid-row: 1/2;\r\n    max-height: 70%;\r\n    max-width: 80%;\r\n\r\n    @media all and (max-width: 850px){\r\n        grid-row: 1/-1;\r\n        grid-column: 1/2;\r\n    }\r\n\r\n    @media all and (max-width: 500px){\r\n        grid-row: 1/2;\r\n        grid-column: 1/-1;\r\n    }\r\n`\r\n\r\nexport const Name = styled.h3`\r\n    grid-row: 2/3;\r\n    font-size: 2.5rem;\r\n    margin: 0;\r\n    text-transform: capitalize;\r\n    text-align: center;\r\n    color: white;\r\n    text-shadow: 0 0 15px hsla(0, 0%, 60%, 1);\r\n    font-family: 'PT Sans Narrow', sans-serif;\r\n\r\n    @media all and (max-width: 850px){\r\n        grid-row: 1/-1;\r\n        grid-column: 2/3;\r\n    }\r\n\r\n    @media all and (max-width: 500px){\r\n        grid-row: 2/3;\r\n        grid-column: 1/-1;\r\n        font-size: 1.7rem;\r\n    }\r\n`","module.exports = __webpack_public_path__ + \"static/media/shoppingCart.15a04861.png\";","import styled from 'styled-components';\r\nimport {Title as MockTitle} from '../Shop/Shop.style';\r\n\r\nexport const Wrapper = styled.div`\r\n    background: linear-gradient(-34deg, var(--mainGreen), var(--mainYellow));\r\n    min-height: 90vh;\r\n    width: 100%;\r\n    padding: 10px 10px 10px 6vw;\r\n    margin: 0;\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr;\r\n    grid-template-rows: 1fr 1fr;\r\n    grid-gap: 10px;\r\n    overflow: hidden;\r\n\r\n    @media all and (max-width: 850px){\r\n        overflow: visible;\r\n    }\r\n\r\n    @media all and (max-width: 500px){\r\n        padding: 10px 10px 10px 11vw;\r\n        grid-template-columns: 1fr;\r\n        grid-template-rows: repeat(4, minmax(250px, 1fr));\r\n    }\r\n`\r\n\r\nexport const Tile = styled.div`\r\n    border-radius: 3px;\r\n    box-shadow: 0px 0px 3px lightgrey;\r\n    position: relative;\r\n    width: 100%;\r\n    height: 100%;\r\n    display: grid;\r\n    justify-items: center;\r\n    align-items: center;\r\n    cursor: pointer;\r\n    overflow: hidden;\r\n    z-index:3;\r\n    transform: translateY(0) scale(1);\r\n    transition: all .2s ease-out;\r\n\r\n    &:hover{\r\n        box-shadow: 0px 0px 7px grey;\r\n        transform: translateY(-1px) scale(1.002);\r\n    }\r\n\r\n    &:focus{\r\n        background: none;\r\n    }\r\n`\r\nexport const Title = styled(MockTitle)`\r\n    font-size: 3rem;\r\n    padding: 0;\r\n    height: auto;\r\n    z-index: 5;\r\n    user-select: none;\r\n    transition: all .3s ease-out;\r\n\r\n    ${Tile}:hover > &{\r\n        color: transparent;\r\n        text-shadow: none;\r\n    }\r\n\r\n    @media all and (max-width: 850px){\r\n        font-size: 2rem;\r\n    }\r\n`\r\n\r\nexport const Text = styled.p`\r\n    width: 90%;\r\n    position: absolute;\r\n    font-size: 1.8rem;\r\n    font-family: 'Lato';\r\n    text-align: center;\r\n    color: transparent;\r\n    user-select: none;\r\n    transition: all .3s ease-out;\r\n\r\n    ${Tile}:hover > & {\r\n        color: white;\r\n    }\r\n\r\n    &::after{\r\n        content: '';\r\n        width: 100px;\r\n        height: 100px;\r\n        background: ${props => props.color};\r\n        position: absolute;\r\n        border-radius: 50%;\r\n        top: 50%;\r\n        left: 50%;\r\n        z-index: -1;\r\n        transform: translate(-50%, -50%);\r\n        transition: all .4s ease-out;\r\n\r\n        ${Tile}:hover > & {\r\n            width: 100vh;\r\n            height: 100vh;\r\n        }\r\n    }\r\n    @media all and (max-width: 850px){\r\n        font-size: .8rem;\r\n    }\r\n\r\n`\r\n\r\nexport const Img = styled.img`\r\n    opacity: 0;\r\n    width: 100px;\r\n    height: 100px;\r\n    object-fit: contain;\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    z-index: 30;\r\n    overflow: visible;\r\n    transform: translate(-50%, -50%);\r\n    transition: all .4s ease-out;\r\n    \r\n    ${Tile}:hover > & {\r\n        opacity: 1;\r\n    }\r\n`\r\n\r\nexport const Boom = styled.div`\r\n    width: 100px;\r\n    height: 100px;\r\n    object-fit: contain;\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    z-index: 1;\r\n    border-radius: 50%;\r\n    transition: all .4s ease-out;\r\n    overflow: visible;\r\n    transform: translate(-50%, -50%);\r\n    background: ${props => props.color};\r\n    \r\n    ${Tile}:hover > & {\r\n        opacity: 1;\r\n        width: 100vh;\r\n        height: 100vh;\r\n    }\r\n`","import React from 'react';\r\nimport {Wrapper, Tile, Title, Text, Img, Boom} from './Grid.style';\r\nimport shoppingCart from '../../images/shoppingCart.png';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst Grid = props => {\r\n    return (\r\n        <Wrapper>\r\n            {props.texts.map((text, idx) => \r\n                {\r\n                    if (props.titles[idx] === `Let's go!`) {\r\n                            return (\r\n                                <Link to='/shop'>\r\n                                    <Tile>\r\n                                        <Title>{props.titles[idx]}</Title>\r\n                                            <Img\r\n                                                src={shoppingCart} \r\n                                                />\r\n                                        <Boom color={props.colors[idx]}/>\r\n                                    </Tile>\r\n                                </Link>\r\n                            )\r\n\r\n                    } else {\r\n                            return (\r\n                                <Tile>\r\n                                    <Title>{props.titles[idx]}</Title>\r\n                                    <Text color={props.colors[idx]}>{text}</Text>\r\n                                </Tile>\r\n                            )\r\n\r\n                    }\r\n                }\r\n            )}\r\n        </Wrapper>\r\n    );\r\n};\r\n\r\nexport default Grid;","import React, { Component } from 'react';\r\nimport {Title} from '../Shop/Shop.style';\r\nimport Grid from './Grid';\r\n\r\nclass About extends Component {\r\n    \r\n    render() {\r\n\r\n        const texts = [\r\n            'Hic, error voluptas quis necessitatibus, sint delectus corrupti voluptates minima quam sequi vel labore accusamus, totam consequatur! Molestiae error consequuntur porro amet. Lorem ipsum dolor sit amet consectetur adipisicing elit. ',\r\n            'Optio vel nisi voluptatem, similique possimus assumenda modi iure cum, adipisci facilis, ducimus accusamus voluptates impedit. Lorem ipsum dolor sit amet consectetur adipisicing elit. ',\r\n            'Lorem ipsum dolor sit amet consectetur adipisicing elit. Ad inventore eos nulla at ratione omnis.',\r\n            'Lorem ipsum dolor sit amet consectetur adipisicing elit. Adipisci eius voluptatem eveniet ullam, ut culpa minima blanditiis dignissimos molestias cumque libero esse.'\r\n        ]\r\n    \r\n        const titles = [\r\n            'who we are?',\r\n            'what we do?',\r\n            'where we are?',\r\n            `Let's go!`,\r\n        ]\r\n    \r\n        const colors = [\r\n            'var(--mainWhite)',\r\n            'var(--mainBlue)',\r\n            'var(--mainPink)',\r\n            'hsl(120, 50%, 75%)',\r\n        ]\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <Title>about</Title>\r\n                <Grid colors={colors} texts={texts} titles={titles}/>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default About;"],"sourceRoot":""}