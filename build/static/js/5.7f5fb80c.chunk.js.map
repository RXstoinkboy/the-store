{"version":3,"sources":["components/Shop/Shop.style.js","components/Shop/Section/Display.style.js","components/Contact/ContactForm.style.js","components/Contact/Contact.style.js","components/Contact/ContactForm.js","components/Contact/ContactInfo.style.js","components/Contact/ContactInfo.js","components/Contact/Contact.js"],"names":["PosedShopWrapper","posed","div","enter","opacity","staggerChildren","exit","ShopWrapper","styled","_templateObject","Wrapper","_templateObject2","PosedContainer","hoverable","init","filter","hover","x","Container","_templateObject3","props","height","color","Title","h1","_templateObject4","Img","img","_templateObject5","Name","h3","_templateObject6","Controls","PosedButton","button","pressable","scale","press","Button","left","active","Info","Text","h2","PosedMoreInfo","svg","y","MoreInfo","_templateObject7","Details","_templateObject8","Form","form","Input","input","label","LastName","Mail","Message","ContactForm","react_default","a","createElement","ContactForm_style","onSubmit","handleSubmit","action","name","type","placeholder","required","onChange","handleChange","value","lastName","pattern","mail","message","Display_style","style","gridColumn","justifySelf","margin","ContactInfo_style_templateObject","Address","Line","p","main","ContactInfo","ContactInfo_style_Wrapper","encode","data","Object","keys","map","key","encodeURIComponent","join","Contact","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","e","target","setState","defineProperty","localStorage","setItem","JSON","stringify","state","checkValidity","fetch","method","headers","Content-Type","body","objectSpread","form-name","then","console","log","removeItem","catch","error","alert","preventDefault","getItem","localState","parse","Fragment","Shop_style","Contact_ContactForm","assign","Contact_ContactInfo","Component"],"mappings":"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","file":"static/js/5.7f5fb80c.chunk.js","sourcesContent":["import styled from 'styled-components';\r\nimport posed from 'react-pose';\r\n\r\nconst PosedShopWrapper = posed.div({\r\n    enter:{\r\n        opacity: 1,\r\n        staggerChildren: 50\r\n    },\r\n    exit: {\r\n        opacity: 0,\r\n    }\r\n});\r\n\r\nexport const ShopWrapper = styled(PosedShopWrapper)`\r\n    background: linear-gradient(135deg, hsla(222, 50%, 80%, .3), hsla(100, 50%, 80%, .4));\r\n    overflow: hidden;\r\n\r\n    @media all and (max-width: 850px){\r\n        overflow: visible;\r\n    }\r\n`\r\n\r\nexport const Wrapper = styled.div`\r\n    padding-left: 5vw;\r\n    width: 100%;\r\n    height: 90vh;\r\n    display: grid;\r\n    grid-template-columns: repeat(auto-fit, minmax(400px, 1fr));\r\n\r\n    @media all and (min-width: 1200px){\r\n        grid-template-columns: 1fr 1fr;\r\n    }\r\n\r\n    @media all and (max-width: 450px){\r\n        grid-template-columns: 1fr;\r\n    }\r\n`\r\n\r\nconst PosedContainer = posed.div({\r\n    hoverable: true,\r\n    init: {\r\n        filter: 'brightness(1)'\r\n    },\r\n    hover: {\r\n        filter: 'brightness(1.15)'\r\n    },\r\n    enter: {x: 0},\r\n    exit: {x: 200}\r\n})\r\n\r\nexport const Container = styled(PosedContainer)`\r\n    height: ${props => props.height};\r\n    background: ${props => props.color};\r\n    box-shadow: inset 0 0 70px hsla(0deg, 0%, 50%, .3);\r\n    display: grid;\r\n    grid-template-rows: 4fr 1fr;\r\n    align-items: center;\r\n    justify-items: center;\r\n    cursor: pointer;\r\n\r\n    @media all and (max-width: 850px){\r\n        height: 30vh;\r\n        grid-template-rows: 1fr;\r\n        grid-template-columns: 1fr 1fr;\r\n    }\r\n\r\n    @media all and (max-width: 500px){\r\n        height: 30vh;\r\n        grid-template-rows: 4fr 1fr;\r\n        grid-template-columns: 1fr;\r\n    }\r\n`\r\n\r\nexport const Title = styled.h1`\r\n    color: white;\r\n    text-shadow: 0 0 20px hsla(0, 0%, 60%, 1);\r\n    padding: 0 0 0 5vw;\r\n    height: 10vh;\r\n    font-size: 8vh;\r\n    text-align: center;\r\n    text-transform: capitalize;\r\n    margin: 0;\r\n    z-index: 20;\r\n    font-family: 'Kaushan Script', cursive;\r\n    \r\n    @media all and (max-width: 450px){\r\n        font-size: 6vh;\r\n    }\r\n`\r\n\r\nexport const Img = styled.img`\r\n    grid-row: 1/2;\r\n    max-height: 70%;\r\n    max-width: 80%;\r\n\r\n    @media all and (max-width: 850px){\r\n        grid-row: 1/-1;\r\n        grid-column: 1/2;\r\n    }\r\n\r\n    @media all and (max-width: 500px){\r\n        grid-row: 1/2;\r\n        grid-column: 1/-1;\r\n    }\r\n`\r\n\r\nexport const Name = styled.h3`\r\n    grid-row: 2/3;\r\n    font-size: 2.5rem;\r\n    margin: 0;\r\n    text-transform: capitalize;\r\n    text-align: center;\r\n    color: white;\r\n    text-shadow: 0 0 15px hsla(0, 0%, 60%, 1);\r\n    font-family: 'PT Sans Narrow', sans-serif;\r\n\r\n    @media all and (max-width: 850px){\r\n        grid-row: 1/-1;\r\n        grid-column: 2/3;\r\n    }\r\n\r\n    @media all and (max-width: 500px){\r\n        grid-row: 2/3;\r\n        grid-column: 1/-1;\r\n        font-size: 1.7rem;\r\n    }\r\n`","import styled from 'styled-components';\r\nimport posed from 'react-pose';\r\n\r\nexport const Wrapper = styled.div`\r\n    grid-column: 1/2;\r\n    background: ${props=>props.color};\r\n    width: 100%;\r\n    display: grid;\r\n    grid-template-columns: repeat(3, 1fr);\r\n    grid-template-rows: 3fr 1fr;\r\n    justify-items: center;\r\n    align-items: center;\r\n    overflow: hidden;\r\n    height: 100%;\r\n    min-height: 200px;\r\n    padding-bottom: 1rem;\r\n\r\n    @media all and (orientation: portrait) and (max-width: 450px){\r\n        grid-column: 1/-1;\r\n        grid-row: 1/2;\r\n    }\r\n`\r\nexport const Img = styled.img`\r\n    max-height: 80%;\r\n    max-width: 90%;\r\n    padding: 2rem;\r\n    grid-column: 1/-1;\r\n    grid-row: 1/2;\r\n`\r\n\r\nexport const Controls = styled.div`\r\n    display: flex;\r\n    width: 100%;\r\n    height: 50%;\r\n    justify-content: center;\r\n    align-items: center;\r\n`\r\n\r\nconst PosedButton = posed.button({\r\n    pressable: true,\r\n    hoverable: true,\r\n    init: {scale: 1},\r\n    press: {scale: 0.9},\r\n    hover: {scale: 1.05}\r\n})\r\n\r\nexport const Button = styled(PosedButton)`\r\n    margin: ${props => props.left ? '0 .5rem 0 0' : '0 0 0 .5rem'};\r\n    padding: 10px;\r\n    border-radius: 3px;\r\n    text-transform: uppercase;\r\n    cursor: ${props => props.active ? 'pointer' : 'disabled'};\r\n    transition: all .3s ease;\r\n    color: white;\r\n    background: ${props => props.active ? 'hsla(210deg, 40%, 50%, 1)' : 'hsla(210deg, 15%, 60%, 1)'};\r\n    border: ${props => props.active ? '2px solid hsla(210deg, 40%, 50%, 1)' : '2px solid hsla(210deg, 15%, 60%, 1)'};\r\n    \r\n    &:focus{\r\n        outline: none;\r\n    }\r\n\r\n    &:hover{\r\n        background: ${props => props.active ? 'hsla(0deg, 0%, 100%, 1)' : 'hsla(210deg, 15%, 60%, 1)'};\r\n        border: ${props => props.active ? '2px solid white' : '2px solid hsla(210deg, 15%, 60%, 1)'};\r\n        color: ${props => props.active ? 'hsla(210deg, 40%, 50%, 1)' : 'white'};\r\n    }\r\n`\r\n\r\nexport const Info = styled.div`\r\n    display: flex;\r\n    width: 100%;\r\n    height: 50%;\r\n    justify-content: center;\r\n    align-items: center;\r\n`\r\n\r\nexport const Text = styled.h2`\r\n    color: white;\r\n    text-shadow: 0 0 20px hsla(0, 0%, 60%, 1);\r\n    font-size: 2rem;\r\n    text-align: center;\r\n    text-transform: capitalize;\r\n    margin: 0 .5rem 0 0;\r\n    padding: .3rem;\r\n    font-family: 'PT Sans Narrow', sans-serif;\r\n\r\n    @media all and (max-width: 850px){\r\n        font-size: 1.5rem;\r\n    }\r\n`\r\n\r\nconst PosedMoreInfo = posed.svg({\r\n    hoverable: true,\r\n    init: {\r\n        scale: 1,\r\n        y: 0,\r\n        filter: `drop-shadow(0 3px 15px hsl(0, 0%, 20%)`\r\n    },\r\n    hover: {\r\n        scale: 1.04,\r\n        y: -2,\r\n        filter: `drop-shadow(0 5px 7px hsl(0, 0%, 20%)`\r\n    }\r\n})\r\n\r\nexport const MoreInfo = styled(PosedMoreInfo)`\r\n    height: 2rem;\r\n    width: 2rem;\r\n    cursor: pointer;\r\n\r\n    @media all and (max-width: 850px){\r\n        height: 1.5rem;\r\n        width: 1.5rem;\r\n    }\r\n`\r\n\r\nexport const Details = styled.div`\r\n    grid-column: 1/-1;\r\n    grid-row: 2/-1;\r\n    width: 100%;\r\n    height: 100%;\r\n`","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 1fr;\r\n    grid-template-rows: auto auto;\r\n`\r\n\r\nexport const Form = styled.form`\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr;\r\n    grid-template-rows: repeat(4, 1fr);\r\n    justify-items: stretch;\r\n    align-items: center;\r\n\r\n    @media all and (max-width: 500px){\r\n        grid-template-columns: 1fr;\r\n        grid-template-rows: auto;\r\n    }\r\n`\r\n\r\nexport const Title = styled.h2`\r\n    padding: .5rem;\r\n    margin: .5rem;\r\n    font-size: 2.5rem;\r\n    font-family: 'PT Sans Narrow';\r\n`\r\n\r\nexport const Input = styled.input`\r\n    padding: .5rem 0;\r\n    margin: .3rem 0;\r\n    font-size: 1rem;\r\n    background: transparent;\r\n    border: none;\r\n    box-shadow: 0 1px 0 gray;\r\n`\r\n\r\nexport const Name = styled.label`\r\n    grid-column: 1/2;\r\n    display: flex;\r\n    flex-flow: column nowrap;\r\n    padding: .5rem;\r\n    margin: .5rem;\r\n    font-weight: bold;\r\n    font-family: 'PT Sans Narrow';\r\n    font-size: .7rem;\r\n\r\n    @media all and (max-width: 500px){\r\n        grid-column: 1/-1;\r\n    }\r\n`\r\n\r\nexport const LastName = styled(Name)`\r\n    grid-column: 2/3;\r\n\r\n    @media all and (max-width: 500px){\r\n        grid-column: 1/-1;\r\n    }\r\n`\r\n\r\nexport const Mail = styled(Name)`\r\n    grid-column: 1/-1;\r\n\r\n    @media all and (max-width: 500px){\r\n        grid-column: 1/-1;\r\n    }\r\n`\r\n\r\nexport const Message = styled(Name)`\r\n    grid-column: 1/-1;\r\n\r\n    @media all and (max-width: 500px){\r\n        grid-column: 1/-1;\r\n    }\r\n`","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n    background: linear-gradient(-200deg, var(--mainWhite), var(--mainPink));\r\n    min-height: 90vh;\r\n    width: 100%;\r\n    padding: 10px 10px 10px 6vw;\r\n\r\n    @media all and (max-width: 500px){\r\n        padding: 10px 10px 10px 11vw;\r\n    }\r\n`","import React from 'react';\r\nimport {Wrapper, Title, Form, Input, Name, LastName, Mail, Message} from './ContactForm.style.js';\r\nimport {Button} from '../Shop/Section/Display.style';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ContactForm = props => {\r\n    return (\r\n        <Wrapper>\r\n                <Title>Fill the form to contact us:</Title>\r\n                <Form \r\n                    onSubmit={props.handleSubmit}\r\n                    action='/contact/success'\r\n                    name='contactForm'\r\n                    >\r\n                    <Name>\r\n                        Please enter your name:\r\n                        <Input\r\n                            type='text'\r\n                            name='name'\r\n                            placeholder='e.g. John'\r\n                            required\r\n                            onChange={props.handleChange}\r\n                            value={props.name} />\r\n                    </Name>\r\n                    <LastName>\r\n                        Please enter your last name:\r\n                        <Input\r\n                            type='text'\r\n                            name='lastName'\r\n                            placeholder='e.g. Smith'\r\n                            required\r\n                            onChange={props.handleChange}\r\n                            value={props.lastName} />\r\n                    </LastName>\r\n                    <Mail>\r\n                        Please enter your e-mail address:\r\n                        <Input\r\n                            type='email'\r\n                            name='mail'\r\n                            placeholder='example@email.com'\r\n                            pattern=\"[^@\\s]+@[^@\\s]+\\.[^@\\s]+\"\r\n                            required\r\n                            onChange={props.handleChange}\r\n                            value={props.mail} />\r\n                    </Mail>\r\n                    <Message>\r\n                        How can we help you?\r\n                        <Input\r\n                            type='text'\r\n                            name='message'\r\n                            placeholder='Please enter your message here'\r\n                            required\r\n                            onChange={props.handleChange}\r\n                            value={props.message} />\r\n                    </Message>\r\n                    <Button\r\n                        type='submit'\r\n                        style={{\r\n                            gridColumn: '1/-1',\r\n                            justifySelf: 'end',\r\n                            margin: '1rem'\r\n                        }} \r\n                        active\r\n                    >\r\n                        submit\r\n                    </Button>\r\n                </Form>\r\n            </Wrapper>\r\n    );\r\n};\r\n\r\nexport default ContactForm;\r\n\r\nContactForm.propTypes = {\r\n    handleSubmit: PropTypes.func.isRequired,\r\n    handleChange: PropTypes.func.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    lastName: PropTypes.string.isRequired,\r\n    mail: PropTypes.string.isRequired,\r\n    message: PropTypes.string.isRequired,\r\n}","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n    display: flex;\r\n    flex-flow: column nowrap;\r\n    margin: 1rem 0;\r\n`\r\n\r\nexport const Address = styled.div`\r\n    display: flex;\r\n    flex-flow: column nowrap;\r\n    margin: 1rem;\r\n`\r\n\r\nexport const Line = styled.p`\r\n    margin: .3rem 0;\r\n    font-family: ${props => props.main ? 'Kaushan Script' : 'PT Sans Narrow'};\r\n    font-size: ${props => props.main ? '1.5rem' : '1.2rem'};\r\n    text-decoration: ${props => props.main ? 'underline' : 'none'};\r\n    margin-bottom: ${props => props.main ? '.5rem' : '0'};\r\n`\r\n","import React from 'react';\r\nimport {Wrapper, Address, Line} from './ContactInfo.style';\r\nimport {Title} from './ContactForm.style';\r\n\r\nconst ContactInfo = () => {\r\n    return (\r\n        <Wrapper>\r\n            <Title>Our location:</Title>\r\n            <Address>\r\n                <Line main>The Store</Line>\r\n                <Line>711-2880 Nulla St.</Line>\r\n                <Line>Mankato Mississippi 96522</Line>\r\n                <Line>(257) 563-7401</Line>\r\n                <Line>contact@thestore.com</Line>\r\n            </Address>\r\n        </Wrapper>\r\n    );\r\n};\r\n\r\nexport default ContactInfo;","import React, { Component } from 'react';\r\nimport {Title} from '../Shop/Shop.style';\r\nimport {Wrapper} from './Contact.style';\r\nimport ContactForm from './ContactForm';\r\nimport ContactInfo from './ContactInfo';\r\n\r\nconst encode = (data) => {\r\n    return Object.keys(data)\r\n        .map(key => encodeURIComponent(key) + \"=\" + encodeURIComponent(data[key]))\r\n        .join(\"&\");\r\n  }\r\n\r\nclass Contact extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            name: '',\r\n            lastName: '',\r\n            mail: '',\r\n            message: ''\r\n        }\r\n    }\r\n\r\n    handleChange =e=> {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n        this.setState({\r\n            [name]: value\r\n        },()=>{localStorage.setItem('contactForm', JSON.stringify(this.state))});\r\n        // keep currently written data in local storage. Just for comfort\r\n    }\r\n\r\n    handleSubmit =e=> {\r\n        if(e.target.checkValidity()){\r\n            fetch('/', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/x-www-form-urlencoded'\r\n                },\r\n                body: encode({ \"form-name\": \"contactForm\", ...this.state })\r\n            })\r\n            .then(()=>console.log('Success!'))\r\n            .then(()=>{\r\n                // clear local storage after submiting form\r\n                localStorage.removeItem('contactForm');\r\n    \r\n                this.setState({\r\n                    name: '',\r\n                    lastName: '',\r\n                    mail: '',\r\n                    message: ''\r\n            })\r\n            })\r\n            .catch(error => alert(error));\r\n        }\r\n\r\n        e.preventDefault()\r\n    }\r\n\r\n    componentDidMount(){\r\n        if(localStorage.getItem('contactForm')){\r\n            const localState = JSON.parse(localStorage.getItem('contactForm'));\r\n            const name = localState.name;\r\n            const lastName = localState.lastName;\r\n            const mail = localState.mail;\r\n            const message = localState.message;\r\n            \r\n            this.setState({\r\n                name,\r\n                lastName,\r\n                mail,\r\n                message\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <React.Fragment>\r\n                <Title>Contact</Title>\r\n                <Wrapper>\r\n                    <ContactForm\r\n                        {...this.state}\r\n                        handleSubmit={this.handleSubmit}\r\n                        handleChange={this.handleChange} />\r\n                    <ContactInfo />\r\n                </Wrapper>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Contact;"],"sourceRoot":""}